// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CreateDonationPool extends ethereum.Event {
  get params(): CreateDonationPool__Params {
    return new CreateDonationPool__Params(this);
  }
}

export class CreateDonationPool__Params {
  _event: CreateDonationPool;

  constructor(event: CreateDonationPool) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get creator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class DonationPoolDeposit extends ethereum.Event {
  get params(): DonationPoolDeposit__Params {
    return new DonationPoolDeposit__Params(this);
  }
}

export class DonationPoolDeposit__Params {
  _event: DonationPoolDeposit;

  constructor(event: DonationPoolDeposit) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class DonationPoolWithdrawal extends ethereum.Event {
  get params(): DonationPoolWithdrawal__Params {
    return new DonationPoolWithdrawal__Params(this);
  }
}

export class DonationPoolWithdrawal__Params {
  _event: DonationPoolWithdrawal;

  constructor(event: DonationPoolWithdrawal) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get account(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Sling__getDonationPoolResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get token(): Address {
    return this[1].toAddress();
  }

  get creator(): Address {
    return this[2].toAddress();
  }

  get beneficiary(): Address {
    return this[3].toAddress();
  }
}

export class Sling extends ethereum.SmartContract {
  static bind(address: Address): Sling {
    return new Sling("Sling", address);
  }

  getDonationPool(
    _donationPoolId: BigInt
  ): Sling__getDonationPoolResultValue0Struct {
    let result = super.call(
      "getDonationPool",
      "getDonationPool(uint256):((uint256,address,address,address))",
      [ethereum.Value.fromUnsignedBigInt(_donationPoolId)]
    );

    return changetype<Sling__getDonationPoolResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getDonationPool(
    _donationPoolId: BigInt
  ): ethereum.CallResult<Sling__getDonationPoolResultValue0Struct> {
    let result = super.tryCall(
      "getDonationPool",
      "getDonationPool(uint256):((uint256,address,address,address))",
      [ethereum.Value.fromUnsignedBigInt(_donationPoolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Sling__getDonationPoolResultValue0Struct>(value[0].toTuple())
    );
  }

  getDonationPoolDeposit(_donationPoolId: BigInt): BigInt {
    let result = super.call(
      "getDonationPoolDeposit",
      "getDonationPoolDeposit(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_donationPoolId)]
    );

    return result[0].toBigInt();
  }

  try_getDonationPoolDeposit(
    _donationPoolId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDonationPoolDeposit",
      "getDonationPoolDeposit(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_donationPoolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDonationPoolYield(_donationPoolId: BigInt): BigInt {
    let result = super.call(
      "getDonationPoolYield",
      "getDonationPoolYield(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_donationPoolId)]
    );

    return result[0].toBigInt();
  }

  try_getDonationPoolYield(
    _donationPoolId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getDonationPoolYield",
      "getDonationPoolYield(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_donationPoolId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPoolAddress(): Address {
    let result = super.call("getPoolAddress", "getPoolAddress():(address)", []);

    return result[0].toAddress();
  }

  try_getPoolAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPoolAddress",
      "getPoolAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTokenTotalBalance(_token: Address): BigInt {
    let result = super.call(
      "getTokenTotalBalance",
      "getTokenTotalBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_token)]
    );

    return result[0].toBigInt();
  }

  try_getTokenTotalBalance(_token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTokenTotalBalance",
      "getTokenTotalBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenTotalYield(_token: Address): BigInt {
    let result = super.call(
      "getTokenTotalYield",
      "getTokenTotalYield(address):(uint256)",
      [ethereum.Value.fromAddress(_token)]
    );

    return result[0].toBigInt();
  }

  try_getTokenTotalYield(_token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTokenTotalYield",
      "getTokenTotalYield(address):(uint256)",
      [ethereum.Value.fromAddress(_token)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserDonationPoolDeposit(_donationPoolId: BigInt, _user: Address): BigInt {
    let result = super.call(
      "getUserDonationPoolDeposit",
      "getUserDonationPoolDeposit(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_donationPoolId),
        ethereum.Value.fromAddress(_user)
      ]
    );

    return result[0].toBigInt();
  }

  try_getUserDonationPoolDeposit(
    _donationPoolId: BigInt,
    _user: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserDonationPoolDeposit",
      "getUserDonationPoolDeposit(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_donationPoolId),
        ethereum.Value.fromAddress(_user)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get poolAddressesProvider_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokensRegistry_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get WETHGateway_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateDonationPoolCall extends ethereum.Call {
  get inputs(): CreateDonationPoolCall__Inputs {
    return new CreateDonationPoolCall__Inputs(this);
  }

  get outputs(): CreateDonationPoolCall__Outputs {
    return new CreateDonationPoolCall__Outputs(this);
  }
}

export class CreateDonationPoolCall__Inputs {
  _call: CreateDonationPoolCall;

  constructor(call: CreateDonationPoolCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _beneficiary(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreateDonationPoolCall__Outputs {
  _call: CreateDonationPoolCall;

  constructor(call: CreateDonationPoolCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get _donationPoolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _donationPoolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
